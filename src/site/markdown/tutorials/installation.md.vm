## Velocity comments use two hashes; so we need an alternative variable
## to represent Markdown headers.
#set($H = '#')
#set($B = 'CLAVIN-release-' + $project.version)
#set($F = $B + '.zip')
#set($D = 'https://github.com/Berico-Technologies/CLAVIN/archive/release/' + $F)
#set($JAR = 'clavin-' + $project.version + '.jar')
#set($JARD = 'clavin-' + $project.version + '-jar-with-dependencies.jar')
#set($JARS = 'clavin-' + $project.version + '-sources.jar')
#set($JARJ = 'clavin-' + $project.version + '-javadoc.jar')

$H Installation

CLAVIN (the core) is not designed to be a standalone component, rather bundled in another application of processing pipeline.  A common use case is to integrate CLAVIN with Apache Hadoop or Twitter Storm.

This section will discuss mechanisms for quickly integrating CLAVIN with a JVM-based project.

$H$H$H Using CLAVIN via Maven

You will need to build an index before using CLAVIN.  Please follow the instructions on [Building a Gazetteer Index from Geonames](../documentation/geonames-indexing.html) to accomplish this task.

Reference the Berico Technologies Nexus Repository in your Maven `pom.xml`:

```
<repositories>
  <repository>
     <id>nexus.bericotechnologies.com</id>
     <name>Berico Technologies Nexus</name>
     <url>http://nexus.bericotechnologies.com/content/groups/public</url>
     <releases><enabled>true</enabled></releases>
     <snapshots><enabled>true</enabled></snapshots>
  </repository>
</repositories>
```

Add a dependency within your `pom.xml` to the CLAVIN project:

```
<dependency>
   <groupId>com.berico</groupId>
   <artifactId>clavin</artifactId>
   <version>$project.version</version>
</dependency>
```

$H$H$H Building CLAVIN from source and referencing the JAR in Eclipse

In this example, we will checkout (or download) the code from GitHub, compile the project via Maven, and add it as a build dependency in Eclipse.

$H$H$H$H 1a.  Checkout the CLAVIN project from GitHub.

```
git clone https://github.com/Berico-Technologies/CLAVIN.git
cd CLAVIN
```

$H$H$H$H 1b.  Download the CLAVIN project as a ZIP file from GitHub.

The url location for the latest tagged branch should be: $D.

```
wget $D
unzip $F
cd $B
```

$H$H$H$H 2.  Compile and package CLAVIN.

```
mvn package
```

Hopefully, all the test will pass (like they should) and you will have a pristine JAR waiting for you in the `target` directory.  If we screwed something up, and you want to temp fate, you are welcome to skip the tests:

```
mvn package -DskipTests
```

$H$H$H$H 3.  Acquire the compiled JAR.

In the `target` directory, you should have the following JARs:

-  $JAR - JAR with only the compiled classes and embedded resources.
-  $JARD - JAR with CLAVIN&#39;s dependencies bundled (a.k.a. 'Fat JAR').
-  $JARS - JAR with the source files.
-  $JARJ - JAR with JavaDocs.

If you so desire, you can move these libraries to the location of your choice:

```
cp target/$JARD /my/library/location/
```

Where ever you keep these files, you will need to know the location to import the libraries into Eclipse.

$H$H$H$H 4.  Import CLAVIN into Eclipse as a User Library.

Assuming you have Eclipse started and you are importing CLAVIN into an existing project:

1. Right click on the project, select **Build Path** > **Add Libraries...**.
2. In the **Add Library** window, select **User Library** and click **Next**.
3. Click **New** in the User Libraries window.
4. Name the library (like &quot;CLAVIN&quot;), and press **OK**.
5. Select the new library, and press **Add External JARs...**.
6. **Browse** for the `$JARD` file.
7. Select the the `$JARD` file and click **Open**.
8. (Optional) Import the Source JAR - expand the CLAVIN JAR, select **Source attachment** and press the **Edit** button on the right.  Select **External location** and press **External File...**.  Navigate to the `$JARS` file and click **Open** and then press **OK**.
9. (Optional) Import the JavaDoc JAR - select **Javadoc location** and press the **Edit** button on the right.  Select **Javadoc in archive**, select **External file** and press **Browse** to the right of the **Archive path** textbox.  Navigate to the `$JARJ` file and click **Open** and then press **OK**.
10. Verify the results, and press **OK**.  Check the box next to the library, and then press **Finish**.

If you are having trouble following along, the process should look something like this (though these screenshots were taken on a Mac with SpringSource Tool Suite):

<table>
  <tr>
    <td>1. Add Libraries</td>
    <td>2. Add User Library</td>
    <td>3. Add New User Library</td>
    <td>4. Name the Library</td>
  </tr>
  <tr>
    <td>
       <a href="../images/eclipse-user-lib/add-libraries.png" target="_blank">
       <img src="../images/eclipse-user-lib/add-libraries.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/add-user-library.png" target="_blank">
       <img src="../images/eclipse-user-lib/add-user-library.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/click-new-library.png" target="_blank">
       <img src="../images/eclipse-user-lib/click-new-library.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/name-user-library.png" target="_blank">
       <img src="../images/eclipse-user-lib/name-user-library.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
  </tr>
  <tr>
    <td>5. Add External JAR</td>
    <td>6. Browse for the JAR.</td>
    <td>7. Import the compiled JAR.</td>
    <td>8. Import Source JAR.</td>
  </tr>
  <tr>
    <td>
       <a href="../images/eclipse-user-lib/add-external-jar.png" target="_blank">
       <img src="../images/eclipse-user-lib/add-external-jar.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/browse-for-jar.png" target="_blank">
       <img src="../images/eclipse-user-lib/browse-for-jar.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/select-jar-with-deps.png" target="_blank">
       <img src="../images/eclipse-user-lib/select-jar-with-deps.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/select-sources.png" target="_blank">
       <img src="../images/eclipse-user-lib/select-sources.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
  </tr>
  <tr>
    <td>9. Import JavaDoc JAR.</td>
    <td>10. Verify and Finish.</td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
       <a href="../images/eclipse-user-lib/select-javadoc.png" target="_blank">
       <img src="../images/eclipse-user-lib/select-javadoc.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>
       <a href="../images/eclipse-user-lib/results.png" target="_blank">
       <img src="../images/eclipse-user-lib/results.png" 
            style="max-height: 150px; max-width: 150px" />
       </a>
    </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
</table>

$H$H$H$H 5.  You're finished!

You should now be able to use CLAVIN with Eclipse.
